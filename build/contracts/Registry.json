{
  "contractName": "Registry",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "name": "FactoryAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "factories",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "name": "addFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"FactoryAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"addFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"factories\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/quoc/Projects/harmony-totp-pure/contracts/registry.sol\":\"Registry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/quoc/Projects/harmony-totp-pure/contracts/core/wallet_data.sol\":{\"keccak256\":\"0xb2e65528d6621e19524b9c4850cd7994aa76d4de7550323fdbcb7500b527d86e\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://2008070b3994ac7d3e38243ed07c1c8795c31f2cae752a2c81c186617c51eb6e\",\"dweb:/ipfs/QmbKsX42C2ojJAQWj3PTUQenW8sfmUwALWjKWAjREcSuoo\"]},\"/home/quoc/Projects/harmony-totp-pure/contracts/ens/ens_resolver.sol\":{\"keccak256\":\"0x93c0182f99a7f98803ecf0aa1dd75c2eeb4cc3ee3b0274d6128ef063ed1b62e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3038cc6ccfdfb75c840f294ca070f4b91b0c4914e985a8d6e2a3de3ab778ec3\",\"dweb:/ipfs/QmcKxhjuf8iC5w6bbgKRTPQM3GXDavG3NfJU4dMy7jUxdL\"]},\"/home/quoc/Projects/harmony-totp-pure/contracts/ens/registrar_interface.sol\":{\"keccak256\":\"0x7861efd78eaf577dbca5386a044618fb6b454db2f507637a68386ca40af09012\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5fc14c9a9facd67ca4ea114ef47efe601f6d8fd9dcff0416d3447a3e582de4e0\",\"dweb:/ipfs/QmNj7MafBtLHnrqAQDb1pmU2w4xkMeUpZBiZtm24agqvH5\"]},\"/home/quoc/Projects/harmony-totp-pure/contracts/external/create2.sol\":{\"keccak256\":\"0x2c597acce474bd116d0650e5f68f4f04d82ed80fb0ad08fa2c808c5ecf3cf324\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f10ad502239525b9f2d1fe534815d1d037f11b4c23a0c78b7f310ce235c10be0\",\"dweb:/ipfs/QmVXLUADfAyU3RFi1VMW9fFfthvxLtHpjrw2MutLskuRAM\"]},\"/home/quoc/Projects/harmony-totp-pure/contracts/external/signatureutil.sol\":{\"keccak256\":\"0x877b6002dbe1397aa3bf49a7070a8a858f38894e2b2e29266182947cf4c588b3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a1d6e697ac68f97555befc3bce07506dde78bfec02946ce10bc43627ff1a6d44\",\"dweb:/ipfs/QmW4EGtqzPLiTRbgiwtBb2JJ2hRokEmDptmFN4jn3KwhN4\"]},\"/home/quoc/Projects/harmony-totp-pure/contracts/external/walletproxy.sol\":{\"keccak256\":\"0x14ab5728562e8719442127c656d5a380b05c12c4d94fcebeb4ec92d52fcd842e\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://403dc50102ba677191f76cc30a53b2b2830dfde56f245a093a3ebc65d32cb717\",\"dweb:/ipfs/QmYLV7LSLFFr1UikzpZegsMYhYwN6jdo5PtDM2QyHzdZcy\"]},\"/home/quoc/Projects/harmony-totp-pure/contracts/features/daily_limit.sol\":{\"keccak256\":\"0xc5bdd6690d6b2f70fe204fa0c22f78974ea4d46010d3d3ac69d6a46abec98d9d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dd1f3578afeb63cea37aa7a2c4526e6a2763ab18969580cd74535d81e133fd83\",\"dweb:/ipfs/QmXQ5z6nAM8wtJJyrShsnSYQAs9KUXBW7HXJzx8oYLe4ck\"]},\"/home/quoc/Projects/harmony-totp-pure/contracts/features/guardians.sol\":{\"keccak256\":\"0xd7f736de5f43c65ae59a3bc481c3a2f5527de3a0f1ab71618f24fe8cac1e441c\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://94cb207d089f415d5a5552e18d3421e1e19328ac1c891783364ade9949d066fd\",\"dweb:/ipfs/Qmak3Jewqh7g9Rz2HWdnj3z9dynWEvytFcXdMLfGb4D6xV\"]},\"/home/quoc/Projects/harmony-totp-pure/contracts/features/metatx.sol\":{\"keccak256\":\"0x407708f63142a206f34805f0a4a8296c9c9b18491b73a2c7a14022f9489b8aa7\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://9d12a64863f250802464d1db9d935f02f17326d18c97990d492ba6c389ddbcea\",\"dweb:/ipfs/QmbJWZjQ9eCeKw8MSDbcvfUNETWyhYeLKJFLeQALCgThhC\"]},\"/home/quoc/Projects/harmony-totp-pure/contracts/features/name_service.sol\":{\"keccak256\":\"0xb9e24d874fb8afec7fbc2c4fb893799696cfe272560337e733031fa3bbacaf6f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://bfd1c3d558a960386f337397be50c4ca12648a76aaf710e283b23fe8379d38e7\",\"dweb:/ipfs/QmVgm3eCws36FiKpLdoJF1MRhP1N2TrCidWqYbb28hg7cT\"]},\"/home/quoc/Projects/harmony-totp-pure/contracts/features/recovery.sol\":{\"keccak256\":\"0xdb27c2b02cd389c730f28b315a56f53f713a785a7a5203275e4ea1360a8ce99b\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://67a0d72e5fb5011e15baa9be309ea68a3ad004b658d10ab1a3be04857f488531\",\"dweb:/ipfs/QmPFAvCUYd7CvzPAcHuitPnSuHv7WfDb6vkqXohSyibHAx\"]},\"/home/quoc/Projects/harmony-totp-pure/contracts/otp_wallet.sol\":{\"keccak256\":\"0x4543ecfee3496448bb513c23d457d78f8a77642318e55de9da380660949cbc34\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://a30daabebe16daeecf39c1cfaefb83720fbeb736bc439f6c00c96136d59e0d05\",\"dweb:/ipfs/QmdwsByF6hrCWPkPmsnbELzBDUsvHGdK5Qkvtckd1hvGr2\"]},\"/home/quoc/Projects/harmony-totp-pure/contracts/registry.sol\":{\"keccak256\":\"0xbf4deddc0c899be89c56e1e918fa3ba9382d08cd10ad1354919da89294fe4e8e\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://dcea78c8ebed402768a8f110f073449270582b9ab2be4fe0a788ce9c51dd979c\",\"dweb:/ipfs/QmeY585QDEtAnv5Ne8dChPfq4Xj73U7ipTKJLwRpEpZy8u\"]},\"/home/quoc/Projects/harmony-totp-pure/contracts/wallet_factory.sol\":{\"keccak256\":\"0x47636b135e6e086f3c51ce9d6c5935bcc9c84a3a3fc53dba49fdcaca5a404497\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://eaab4b467646908e215927cc3baf58254f800bb12dd4d91d56a10d5fd702575f\",\"dweb:/ipfs/QmeACobGt28V1UhghMJFumQVr6Enfeh3Mqx52MWDQg6Gk7\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x7de6e64d4a8075e803a972cc77c4c91463e0c3777e4110eacfb5d4a71759b2fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b3b09ef36374c1c104ee896797dadf2e81466d2143b481d3f1ddc7d9f3873\",\"dweb:/ipfs/QmSWtqs28RHDezRWBbmEfqiPYwsGTKj44NRbuxvZ96cqMU\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005057600080fd5b5061041b806100606000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806329ce1ec514610046578063672383c4146100625780638da5cb5b14610092575b600080fd5b610060600480360381019061005b9190610268565b6100b0565b005b61007c60048036038101906100779190610291565b6101db565b604051610089919061032f565b60405180910390f35b61009a61021a565b6040516100a7919061032f565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461013e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101359061034a565b60405180910390fd5b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f6fdc0147105e43e21da80a75b42d0fd464060d5e1a34b0cefbf0b4ccfc2e36a1816040516101d0919061032f565b60405180910390a150565b600181815481106101eb57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061024d816103b7565b92915050565b600081359050610262816103ce565b92915050565b60006020828403121561027a57600080fd5b60006102888482850161023e565b91505092915050565b6000602082840312156102a357600080fd5b60006102b184828501610253565b91505092915050565b6102c38161037b565b82525050565b60006102d660338361036a565b91507f546869732066756e6374696f6e206973207265737472696374656420746f207460008301527f686520636f6e74726163742773206f776e6572000000000000000000000000006020830152604082019050919050565b600060208201905061034460008301846102ba565b92915050565b60006020820190508181036000830152610363816102c9565b9050919050565b600082825260208201905092915050565b60006103868261038d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6103c08161037b565b81146103cb57600080fd5b50565b6103d7816103ad565b81146103e257600080fd5b5056fea2646970667358221220d22d296dc9aeeb5af40035b440e1aecfd99b9713f1078ada60eadaa64d07d7d764736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806329ce1ec514610046578063672383c4146100625780638da5cb5b14610092575b600080fd5b610060600480360381019061005b9190610268565b6100b0565b005b61007c60048036038101906100779190610291565b6101db565b604051610089919061032f565b60405180910390f35b61009a61021a565b6040516100a7919061032f565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461013e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101359061034a565b60405180910390fd5b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f6fdc0147105e43e21da80a75b42d0fd464060d5e1a34b0cefbf0b4ccfc2e36a1816040516101d0919061032f565b60405180910390a150565b600181815481106101eb57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061024d816103b7565b92915050565b600081359050610262816103ce565b92915050565b60006020828403121561027a57600080fd5b60006102888482850161023e565b91505092915050565b6000602082840312156102a357600080fd5b60006102b184828501610253565b91505092915050565b6102c38161037b565b82525050565b60006102d660338361036a565b91507f546869732066756e6374696f6e206973207265737472696374656420746f207460008301527f686520636f6e74726163742773206f776e6572000000000000000000000000006020830152604082019050919050565b600060208201905061034460008301846102ba565b92915050565b60006020820190508181036000830152610363816102c9565b9050919050565b600082825260208201905092915050565b60006103868261038d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6103c08161037b565b81146103cb57600080fd5b50565b6103d7816103ad565b81146103e257600080fd5b5056fea2646970667358221220d22d296dc9aeeb5af40035b440e1aecfd99b9713f1078ada60eadaa64d07d7d764736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2744:23",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:23"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:23"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:23"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:23",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:23",
                "type": ""
              }
            ],
            "src": "7:139:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:23"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:23"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:23"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:23",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:23",
                "type": ""
              }
            ],
            "src": "152:139:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "363:196:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "409:16:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "418:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "421:1:23",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "411:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "411:12:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "411:12:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "384:7:23"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "393:9:23"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "380:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "380:23:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "405:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "376:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:32:23"
                  },
                  "nodeType": "YulIf",
                  "src": "373:2:23"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "435:117:23",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "450:15:23",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "464:1:23",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "454:6:23",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "479:63:23",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "514:9:23"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "525:6:23"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "510:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "510:22:23"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "534:7:23"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "489:20:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "489:53:23"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "479:6:23"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "333:9:23",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "344:7:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "356:6:23",
                "type": ""
              }
            ],
            "src": "297:262:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "631:196:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "677:16:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "686:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "689:1:23",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "679:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "679:12:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "679:12:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "652:7:23"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "661:9:23"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "648:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "648:23:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "673:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "644:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "644:32:23"
                  },
                  "nodeType": "YulIf",
                  "src": "641:2:23"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "703:117:23",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "718:15:23",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "732:1:23",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "722:6:23",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "747:63:23",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "782:9:23"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "793:6:23"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "778:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "778:22:23"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "802:7:23"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "757:20:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "757:53:23"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "747:6:23"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "601:9:23",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "612:7:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "624:6:23",
                "type": ""
              }
            ],
            "src": "565:262:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "898:53:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "915:3:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "938:5:23"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "920:17:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "920:24:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "908:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "908:37:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "908:37:23"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "886:5:23",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "893:3:23",
                "type": ""
              }
            ],
            "src": "833:118:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1103:237:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1113:74:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1179:3:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1184:2:23",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1120:58:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1120:67:23"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1113:3:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1208:3:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1213:1:23",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1204:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1204:11:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1217:34:23",
                        "type": "",
                        "value": "This function is restricted to t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1197:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1197:55:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1197:55:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1273:3:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1278:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1269:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1269:12:23"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1283:21:23",
                        "type": "",
                        "value": "he contract's owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1262:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1262:43:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1262:43:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1315:19:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1326:3:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1331:2:23",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1322:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1322:12:23"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1315:3:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1091:3:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1099:3:23",
                "type": ""
              }
            ],
            "src": "957:383:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1444:124:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1454:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1466:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1477:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1462:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1462:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1454:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1534:6:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1547:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1558:1:23",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1543:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1543:17:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1490:43:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1490:71:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1490:71:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1416:9:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1428:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1439:4:23",
                "type": ""
              }
            ],
            "src": "1346:222:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1745:248:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1755:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1767:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1778:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1763:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1763:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1755:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1802:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1813:1:23",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1798:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1798:17:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1821:4:23"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1827:9:23"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1817:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1817:20:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1791:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1791:47:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1791:47:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1847:139:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1981:4:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1855:124:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1855:131:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1847:4:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1725:9:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1740:4:23",
                "type": ""
              }
            ],
            "src": "1574:419:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2095:73:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2112:3:23"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2117:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2105:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2105:19:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2105:19:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2133:29:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2152:3:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2157:4:23",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2148:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2148:14:23"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2133:11:23"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2067:3:23",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2072:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2083:11:23",
                "type": ""
              }
            ],
            "src": "1999:169:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2219:51:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2229:35:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2258:5:23"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2240:17:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2240:24:23"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2229:7:23"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2201:5:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2211:7:23",
                "type": ""
              }
            ],
            "src": "2174:96:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2321:81:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2331:65:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2346:5:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2353:42:23",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2342:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2342:54:23"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2331:7:23"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2303:5:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2313:7:23",
                "type": ""
              }
            ],
            "src": "2276:126:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2453:32:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2463:16:23",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2474:5:23"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2463:7:23"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2435:5:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2445:7:23",
                "type": ""
              }
            ],
            "src": "2408:77:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2534:79:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2591:16:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2600:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2603:1:23",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2593:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2593:12:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2593:12:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2557:5:23"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2582:5:23"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2564:17:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2564:24:23"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2554:2:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2554:35:23"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2547:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2547:43:23"
                  },
                  "nodeType": "YulIf",
                  "src": "2544:2:23"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2527:5:23",
                "type": ""
              }
            ],
            "src": "2491:122:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2662:79:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2719:16:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2728:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2731:1:23",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2721:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2721:12:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2721:12:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2685:5:23"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2710:5:23"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2692:17:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2692:24:23"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2682:2:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2682:35:23"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2675:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2675:43:23"
                  },
                  "nodeType": "YulIf",
                  "src": "2672:2:23"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2655:5:23",
                "type": ""
              }
            ],
            "src": "2619:122:23"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n\n        mstore(add(pos, 0), \"This function is restricted to t\")\n\n        mstore(add(pos, 32), \"he contract's owner\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 23,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "99:405:15:-:0;;;184:10;161:33;;;;;;;;;;;;;;;;;;;;99:405;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "99:405:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;375:127;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;198:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;161:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;375:127;286:5;;;;;;;;;;272:19;;:10;:19;;;257:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;440:9:::1;455:7;440:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;476:21;489:7;476:21;;;;;;:::i;:::-;;;;;;;;375:127:::0;:::o;198:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;161:33::-;;;;;;;;;;;;:::o;7:139:23:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:262::-;;673:2;661:9;652:7;648:23;644:32;641:2;;;689:1;686;679:12;641:2;732:1;757:53;802:7;793:6;782:9;778:22;757:53;:::i;:::-;747:63;;703:117;631:196;;;;:::o;833:118::-;920:24;938:5;920:24;:::i;:::-;915:3;908:37;898:53;;:::o;957:383::-;;1120:67;1184:2;1179:3;1120:67;:::i;:::-;1113:74;;1217:34;1213:1;1208:3;1204:11;1197:55;1283:21;1278:2;1273:3;1269:12;1262:43;1331:2;1326:3;1322:12;1315:19;;1103:237;;;:::o;1346:222::-;;1477:2;1466:9;1462:18;1454:26;;1490:71;1558:1;1547:9;1543:17;1534:6;1490:71;:::i;:::-;1444:124;;;;:::o;1574:419::-;;1778:2;1767:9;1763:18;1755:26;;1827:9;1821:4;1817:20;1813:1;1802:9;1798:17;1791:47;1855:131;1981:4;1855:131;:::i;:::-;1847:139;;1745:248;;;:::o;1999:169::-;;2117:6;2112:3;2105:19;2157:4;2152:3;2148:14;2133:29;;2095:73;;;;:::o;2174:96::-;;2240:24;2258:5;2240:24;:::i;:::-;2229:35;;2219:51;;;:::o;2276:126::-;;2353:42;2346:5;2342:54;2331:65;;2321:81;;;:::o;2408:77::-;;2474:5;2463:16;;2453:32;;;:::o;2491:122::-;2564:24;2582:5;2564:24;:::i;:::-;2557:5;2554:35;2544:2;;2603:1;2600;2593:12;2544:2;2534:79;:::o;2619:122::-;2692:24;2710:5;2692:24;:::i;:::-;2685:5;2682:35;2672:2;;2731:1;2728;2721:12;2672:2;2662:79;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.7.6;\n\nimport \"./wallet_factory.sol\";\n\ncontract Registry\n{\n  event FactoryAdded (address factory);\n  address public owner = msg.sender;\n  address[] public factories;\n\n  modifier restricted() {\n    require(\n      msg.sender == owner,\n      \"This function is restricted to the contract's owner\"\n    );\n    _;\n  }\n\n\n  function addFactory(address factory) external restricted {\n      factories.push(factory);\n      emit FactoryAdded(factory);\n  }\n}\n",
  "sourcePath": "/home/quoc/Projects/harmony-totp-pure/contracts/registry.sol",
  "ast": {
    "absolutePath": "/home/quoc/Projects/harmony-totp-pure/contracts/registry.sol",
    "exportedSymbols": {
      "Address": [
        4456
      ],
      "Core": [
        695
      ],
      "Create2": [
        911
      ],
      "DailyLimit": [
        1203
      ],
      "Guardians": [
        1404
      ],
      "IERC1155Receiver": [
        4141
      ],
      "IERC165": [
        4490
      ],
      "IERC721Receiver": [
        4159
      ],
      "IProxy": [
        1047
      ],
      "MetaTx": [
        1924
      ],
      "NameService": [
        2014
      ],
      "Recovery": [
        2336
      ],
      "RegistrarInterface": [
        816
      ],
      "Registry": [
        3739
      ],
      "Resolver": [
        722
      ],
      "SignatureUtil": [
        1038
      ],
      "TOTPWallet": [
        3694
      ],
      "WalletFactory": [
        3996
      ],
      "WalletProxy": [
        1095
      ]
    },
    "id": 3740,
    "license": "GPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3696,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "41:24:15"
      },
      {
        "absolutePath": "/home/quoc/Projects/harmony-totp-pure/contracts/wallet_factory.sol",
        "file": "./wallet_factory.sol",
        "id": 3697,
        "nodeType": "ImportDirective",
        "scope": 3740,
        "sourceUnit": 3997,
        "src": "67:30:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3739,
        "linearizedBaseContracts": [
          3739
        ],
        "name": "Registry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 3701,
            "name": "FactoryAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3699,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "factory",
                  "nodeType": "VariableDeclaration",
                  "scope": 3701,
                  "src": "141:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "141:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "140:17:15"
            },
            "src": "121:37:15"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 3705,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 3739,
            "src": "161:33:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3702,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "161:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "expression": {
                "id": 3703,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967281,
                "src": "184:3:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 3704,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "src": "184:10:15",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "672383c4",
            "id": 3708,
            "mutability": "mutable",
            "name": "factories",
            "nodeType": "VariableDeclaration",
            "scope": 3739,
            "src": "198:26:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3706,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "198:7:15",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3707,
              "nodeType": "ArrayTypeName",
              "src": "198:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3719,
              "nodeType": "Block",
              "src": "251:119:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3711,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "272:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "272:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3713,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3705,
                          "src": "286:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "272:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732066756e6374696f6e206973207265737472696374656420746f2074686520636f6e74726163742773206f776e6572",
                        "id": 3715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "299:53:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1",
                          "typeString": "literal_string \"This function is restricted to the contract's owner\""
                        },
                        "value": "This function is restricted to the contract's owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1",
                          "typeString": "literal_string \"This function is restricted to the contract's owner\""
                        }
                      ],
                      "id": 3710,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "257:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "257:101:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3717,
                  "nodeType": "ExpressionStatement",
                  "src": "257:101:15"
                },
                {
                  "id": 3718,
                  "nodeType": "PlaceholderStatement",
                  "src": "364:1:15"
                }
              ]
            },
            "id": 3720,
            "name": "restricted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "248:2:15"
            },
            "src": "229:141:15",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3737,
              "nodeType": "Block",
              "src": "432:70:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3730,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3722,
                        "src": "455:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3727,
                        "name": "factories",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3708,
                        "src": "440:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "440:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "440:23:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3732,
                  "nodeType": "ExpressionStatement",
                  "src": "440:23:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3734,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3722,
                        "src": "489:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3733,
                      "name": "FactoryAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3701,
                      "src": "476:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "476:21:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3736,
                  "nodeType": "EmitStatement",
                  "src": "471:26:15"
                }
              ]
            },
            "functionSelector": "29ce1ec5",
            "id": 3738,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3725,
                "modifierName": {
                  "id": 3724,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3720,
                  "src": "421:10:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "421:10:15"
              }
            ],
            "name": "addFactory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3722,
                  "mutability": "mutable",
                  "name": "factory",
                  "nodeType": "VariableDeclaration",
                  "scope": 3738,
                  "src": "395:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "395:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "394:17:15"
            },
            "returnParameters": {
              "id": 3726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "432:0:15"
            },
            "scope": 3739,
            "src": "375:127:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3740,
        "src": "99:405:15"
      }
    ],
    "src": "41:464:15"
  },
  "legacyAST": {
    "absolutePath": "/home/quoc/Projects/harmony-totp-pure/contracts/registry.sol",
    "exportedSymbols": {
      "Address": [
        4456
      ],
      "Core": [
        695
      ],
      "Create2": [
        911
      ],
      "DailyLimit": [
        1203
      ],
      "Guardians": [
        1404
      ],
      "IERC1155Receiver": [
        4141
      ],
      "IERC165": [
        4490
      ],
      "IERC721Receiver": [
        4159
      ],
      "IProxy": [
        1047
      ],
      "MetaTx": [
        1924
      ],
      "NameService": [
        2014
      ],
      "Recovery": [
        2336
      ],
      "RegistrarInterface": [
        816
      ],
      "Registry": [
        3739
      ],
      "Resolver": [
        722
      ],
      "SignatureUtil": [
        1038
      ],
      "TOTPWallet": [
        3694
      ],
      "WalletFactory": [
        3996
      ],
      "WalletProxy": [
        1095
      ]
    },
    "id": 3740,
    "license": "GPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3696,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "41:24:15"
      },
      {
        "absolutePath": "/home/quoc/Projects/harmony-totp-pure/contracts/wallet_factory.sol",
        "file": "./wallet_factory.sol",
        "id": 3697,
        "nodeType": "ImportDirective",
        "scope": 3740,
        "sourceUnit": 3997,
        "src": "67:30:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3739,
        "linearizedBaseContracts": [
          3739
        ],
        "name": "Registry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 3701,
            "name": "FactoryAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3699,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "factory",
                  "nodeType": "VariableDeclaration",
                  "scope": 3701,
                  "src": "141:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "141:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "140:17:15"
            },
            "src": "121:37:15"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 3705,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 3739,
            "src": "161:33:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3702,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "161:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "expression": {
                "id": 3703,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967281,
                "src": "184:3:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 3704,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "src": "184:10:15",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "672383c4",
            "id": 3708,
            "mutability": "mutable",
            "name": "factories",
            "nodeType": "VariableDeclaration",
            "scope": 3739,
            "src": "198:26:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3706,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "198:7:15",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3707,
              "nodeType": "ArrayTypeName",
              "src": "198:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3719,
              "nodeType": "Block",
              "src": "251:119:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3711,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "272:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "272:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3713,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3705,
                          "src": "286:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "272:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732066756e6374696f6e206973207265737472696374656420746f2074686520636f6e74726163742773206f776e6572",
                        "id": 3715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "299:53:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1",
                          "typeString": "literal_string \"This function is restricted to the contract's owner\""
                        },
                        "value": "This function is restricted to the contract's owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1",
                          "typeString": "literal_string \"This function is restricted to the contract's owner\""
                        }
                      ],
                      "id": 3710,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "257:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "257:101:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3717,
                  "nodeType": "ExpressionStatement",
                  "src": "257:101:15"
                },
                {
                  "id": 3718,
                  "nodeType": "PlaceholderStatement",
                  "src": "364:1:15"
                }
              ]
            },
            "id": 3720,
            "name": "restricted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "248:2:15"
            },
            "src": "229:141:15",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3737,
              "nodeType": "Block",
              "src": "432:70:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3730,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3722,
                        "src": "455:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3727,
                        "name": "factories",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3708,
                        "src": "440:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "440:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "440:23:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3732,
                  "nodeType": "ExpressionStatement",
                  "src": "440:23:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3734,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3722,
                        "src": "489:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3733,
                      "name": "FactoryAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3701,
                      "src": "476:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "476:21:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3736,
                  "nodeType": "EmitStatement",
                  "src": "471:26:15"
                }
              ]
            },
            "functionSelector": "29ce1ec5",
            "id": 3738,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3725,
                "modifierName": {
                  "id": 3724,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3720,
                  "src": "421:10:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "421:10:15"
              }
            ],
            "name": "addFactory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3722,
                  "mutability": "mutable",
                  "name": "factory",
                  "nodeType": "VariableDeclaration",
                  "scope": 3738,
                  "src": "395:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "395:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "394:17:15"
            },
            "returnParameters": {
              "id": 3726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "432:0:15"
            },
            "scope": 3739,
            "src": "375:127:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3740,
        "src": "99:405:15"
      }
    ],
    "src": "41:464:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "1000": {
      "events": {
        "0x6fdc0147105e43e21da80a75b42d0fd464060d5e1a34b0cefbf0b4ccfc2e36a1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "factory",
              "type": "address"
            }
          ],
          "name": "FactoryAdded",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xF6E9aeF1cDEeE4243566c7207ddDa7B5DcbEC496",
      "transactionHash": "0xfb4ced4ad4db50e4b8e6d9ef552ba5f0f99beba872422aa85ef1cb5d6e967737"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-10-26T02:09:30.882Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}